FROM php:8.3-fpm AS core

# Set working directory
WORKDIR /var/www/html

# Arguments defined in docker-compose.yml
ARG user
ARG uid

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip \
    gnupg \
    gnupg2

# Install node and npm
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get update \
    && apt-get install -y nodejs \
    && npm install -g npm

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd

# Install Redis
RUN pecl install redis

# Get Composer
COPY --from=composer:2.7.8 /usr/bin/composer /usr/bin/composer

# Create system user to run Composer and Artisan Commands
RUN useradd -G www-data,root -u $uid -d /home/$user $user

RUN mkdir -p /home/$user/.composer && \
    chown -R $user:$user /home/$user

# Copy composer and js dependency files
COPY ./core/composer.* /var/www/html/
COPY ./core/package* /var/www/html/

# Copy scripts
COPY ./docker/core/update.sh /var/www/html/update.sh
COPY ./docker/bin/wait-for-it.sh /var/www/html/wait-for-it.sh

# Copy over PHP config
COPY ./docker/core/php-fpm/php-prod.ini /usr/local/etc/php/conf.d/php.ini

# Install Laravel dependencies using Composer
RUN composer install --no-scripts

## Install front end packages
RUN npm install

# Copy over application
COPY ./core /var/www/html

# Set file and folder permissions
RUN php artisan storage:link && \
    chmod +x /var/www/html/update.sh && \
    chmod +x /var/www/html/wait-for-it.sh && \
    chown -R $user:$user /var/www/html && \
    chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache

USER $user

FROM core AS worker
COPY ./docker/core/worker.sh /var/www/html/worker.sh
CMD ["/bin/sh", "/var/www/html/worker.sh"]

FROM core AS scheduler
COPY ./docker/core/scheduler.sh /var/www/html/scheduler.sh
CMD ["/bin/sh", "/var/www/html/scheduler.sh"]
