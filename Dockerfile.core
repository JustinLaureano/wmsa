FROM php:8.3-fpm AS base

# Set working directory
WORKDIR /var/www/html

# Arguments defined in docker-compose.yml
ARG user="laravel"
ARG uid=1000

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip \
    gnupg \
    gnupg2

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd

# Install Redis
RUN pecl install redis

# Get Composer
COPY --from=composer:2.7.8 /usr/bin/composer /usr/bin/composer

# Create system user to run Composer and Artisan Commands
RUN useradd -G www-data,root -u $uid -d /home/$user $user

RUN mkdir -p /home/$user/.composer && \
    chown -R $user:$user /home/$user

# Copy composer dependency files
COPY ./core/composer.* /var/www/html/

# Copy scripts
COPY ./docker/core/bin/update.sh /var/www/html/update.sh
COPY ./docker/bin/wait-for-it.sh /var/www/html/wait-for-it.sh

# Copy over PHP config
COPY ./docker/core/php-fpm/php-prod.ini /usr/local/etc/php/conf.d/php.ini

# Install Laravel dependencies using Composer
RUN composer install --no-scripts

# Copy over application
COPY ./core /var/www/html

# Set file and folder permissions
RUN php artisan storage:link && \
    chmod +x /var/www/html/update.sh && \
    chmod +x /var/www/html/wait-for-it.sh && \
    chown -R $user:$user /var/www/html && \
    chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache




FROM base AS core

# Install node, npm, and pnpm
RUN echo "Package: node* \nPin: release *\nPin-Priority: -1" > /etc/apt/preferences.d/no-debian-nodejs && \
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    NODE_MAJOR=20 && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list && \
    apt-get update && \
    apt-get install nodejs -y \
    && npm install -g pnpm


# Copy front end dependency files
COPY ./core/package* /var/www/html/

USER $user

# Install front end packages (pnpm is a million times faster at installing for whatever reason)
RUN mkdir -p /var/www/html/node_modules \
    && pnpm install




FROM core AS core-dev

USER root

# Install supervisor
RUN apt-get install -y supervisor

# Copy supervisor config
COPY ./docker/core/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Expose php-fpm port as well as vite development port
EXPOSE 9000 5173

USER $user

CMD ["supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]




FROM base AS reverb

USER root

COPY ./docker/core/bin/reverb.sh /var/www/html/reverb.sh
RUN chmod +x /var/www/html/reverb.sh

USER $user

EXPOSE 9000 8080

CMD ["/bin/sh", "/var/www/html/reverb.sh"]




FROM base AS worker

COPY ./docker/core/bin/worker.sh /var/www/html/worker.sh
RUN chmod +x /var/www/html/worker.sh

USER $user

CMD ["/bin/sh", "/var/www/html/worker.sh"]




FROM base AS scheduler

COPY ./docker/core/bin/scheduler.sh /var/www/html/scheduler.sh
RUN chmod +x /var/www/html/scheduler.sh

USER $user

CMD ["/bin/sh", "/var/www/html/scheduler.sh"]
